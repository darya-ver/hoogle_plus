(snd (Pair (arg1) (GHC.List.splitAt (arg0) (arg2))))
(fst (Pair (Pair (arg2) (arg2)) (GHC.List.replicate (arg1) (arg0))))
(Pair (snd (Pair (arg2) (arg2))) (GHC.List.take (arg1) (GHC.List.take (arg0) (arg2))))
(GHC.List.unzip (GHC.List.zip (GHC.List.take (arg1) (arg2)) (GHC.List.take (arg0) (arg2))))
(GHC.List.sum (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (GHC.List.zip (GHC.List.replicate (arg1) (arg2)) (GHC.List.replicate (arg0) (arg2))))
(GHC.List.splitAt (snd (Pair (arg2) (arg1))) (snd (Pair (arg0) (arg2))))
(GHC.List.product (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (GHC.List.zip (GHC.List.replicate (arg1) (arg2)) (GHC.List.replicate (arg0) (arg2))))
(GHC.List.minimum (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (GHC.List.zip (GHC.List.replicate (arg1) (arg2)) (GHC.List.replicate (arg0) (arg2))))
(GHC.List.maximum (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (GHC.List.zip (GHC.List.replicate (arg1) (arg2)) (GHC.List.replicate (arg0) (arg2))))
(GHC.List.last (GHC.List.zip (GHC.List.replicate (arg1) (arg2)) (GHC.List.replicate (arg0) (arg2))))
(GHC.List.head (GHC.List.zip (GHC.List.replicate (arg1) (arg2)) (GHC.List.replicate (arg0) (arg2))))
(Data.Tuple.swap (Pair (GHC.List.take (arg1) (arg2)) (GHC.List.take (arg0) (arg2))))
(Data.Tuple.snd (Pair (arg1) (GHC.List.splitAt (arg0) (arg2))))
(Data.Tuple.fst (Pair (Pair (arg2) (arg2)) (GHC.List.replicate (arg1) (arg0))))
(Data.Maybe.fromMaybe (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (Data.Function.const (Data.Function.const (Data.Maybe.Nothing) (arg2)) (GHC.List.replicate (arg1) (arg0))))
(Data.Maybe.fromJust (Data.Function.const (Data.Function.const (Data.Maybe.Nothing) (arg2)) (GHC.List.replicate (arg1) (arg0))))
(Data.Function.id (Pair (GHC.List.take (arg1) (arg2)) (GHC.List.take (arg0) (arg2))))
(Data.Function.const (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (Text.Show.showsPrec (Data.Maybe.fromJust (Data.Maybe.Nothing)) (arg1) (GHC.List.replicate (arg0) (arg2)) (Data.Maybe.maybeToList (Data.Maybe.Nothing))))
(Data.Either.fromRight (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (Data.Function.const (Data.Either.Left (arg2)) (GHC.List.replicate (arg1) (arg0))))
(Data.Either.fromLeft (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (Data.Function.const (Data.Either.Right (arg2)) (GHC.List.replicate (arg1) (arg0))))
(Data.Bool.bool (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (GHC.List.notElem (Data.Maybe.fromJust (Data.Maybe.Nothing)) (arg2) (GHC.List.replicate (arg1) (arg0))))
((GHC.List.!!) (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (Data.Maybe.fromMaybe (Data.Function.const (arg1) (arg2)) (Data.Maybe.Just (arg0))))
head: "(snd (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))))"
Computation time: 1.545 sec
