(snd (Pair (arg1) (arg0)))
(fst (Pair (arg0) (arg1)))
(GHC.List.sum (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (GHC.List.take (GHC.List.length (arg1)) (GHC.List.repeat (arg0))))
(GHC.List.product (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (GHC.List.take (GHC.List.length (arg1)) (GHC.List.repeat (arg0))))
(GHC.List.minimum (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (GHC.List.take (GHC.List.length (arg1)) (GHC.List.repeat (arg0))))
(GHC.List.maximum (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (GHC.List.take (GHC.List.length (arg1)) (GHC.List.repeat (arg0))))
(GHC.List.last (GHC.List.take (GHC.List.length (arg1)) (GHC.List.repeat (arg0))))
(GHC.List.head (GHC.List.take (GHC.List.length (arg1)) (GHC.List.repeat (arg0))))
(Data.Tuple.snd (Pair (arg1) (arg0)))
(Data.Tuple.fst (Pair (arg0) (arg1)))
(Data.Maybe.fromMaybe (snd (Pair (arg1) (arg0))) (snd (Pair (arg1) (Data.Maybe.Nothing))))
(Data.Maybe.fromJust (GHC.List.sum (Data.Maybe.fromJust (Data.Maybe.Nothing)) (Data.Function.const (arg1) (arg0))))
(Data.Function.id (snd (Pair (arg1) (arg0))))
(Data.Function.const (snd (Pair (arg1) (arg0))) (snd (Pair (arg1) (arg1))))
(Data.Either.fromRight (snd (Pair (arg1) (arg0))) (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))))
(Data.Either.fromLeft (snd (Pair (arg1) (arg0))) (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))))
(Data.Bool.bool (snd (Pair (arg1) (arg0))) (snd (Pair (arg1) (arg0))) (snd (Pair (arg1) (Data.Bool.otherwise))))
((GHC.List.!!) (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (GHC.List.length (Data.Function.const (arg1) (arg0))))
head: "(snd (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))))"
Computation time: 1.113 sec
