(snd (Pair (arg1) (GHC.List.take (arg0) (arg1))))
(fst (Pair (arg1) (arg0)))
(GHC.List.take (snd (Pair (arg1) (arg0))) (snd (Pair (arg1) (arg1))))
(GHC.List.tail (snd (Pair (arg0) (arg1))))
(GHC.List.sum (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (GHC.List.take (arg0) (GHC.List.replicate (arg0) (arg1))))
(GHC.List.reverse (snd (Pair (arg0) (arg1))))
(GHC.List.replicate (snd (Pair (arg1) (arg0))) (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))))
(GHC.List.repeat (GHC.List.sum (Data.Maybe.fromJust (Data.Maybe.Nothing)) (GHC.List.take (arg0) (arg1))))
(GHC.List.product (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (GHC.List.take (arg0) (GHC.List.replicate (arg0) (arg1))))
(GHC.List.minimum (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (GHC.List.take (arg0) (GHC.List.replicate (arg0) (arg1))))
(GHC.List.maximum (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (GHC.List.take (arg0) (GHC.List.replicate (arg0) (arg1))))
(GHC.List.last (GHC.List.take (arg0) (GHC.List.replicate (arg0) (arg1))))
(GHC.List.init (snd (Pair (arg0) (arg1))))
(GHC.List.head (GHC.List.take (arg0) (GHC.List.replicate (arg0) (arg1))))
(GHC.List.drop (snd (Pair (arg1) (arg0))) (snd (Pair (arg1) (arg1))))
(GHC.List.cycle (snd (Pair (arg0) (arg1))))
(GHC.List.concat (GHC.List.take (arg0) (GHC.List.replicate (arg0) (arg1))))
(Data.Tuple.snd (Pair (arg1) (GHC.List.take (arg0) (arg1))))
(Data.Tuple.fst (Pair (arg1) (arg0)))
(Data.Maybe.maybeToList (GHC.List.lookup (Data.Maybe.fromJust (Data.Maybe.Nothing)) (arg0) (GHC.List.zip (arg1) (arg1))))
(Data.Maybe.fromMaybe (snd (Pair (arg1) (arg1))) (snd (Pair (arg0) (Data.Maybe.Nothing))))
(Data.Maybe.fromJust (GHC.List.lookup (Data.Maybe.fromJust (Data.Maybe.Nothing)) (GHC.List.replicate (arg0) (arg1)) (Data.Maybe.maybeToList (Data.Maybe.Nothing))))
(Data.Maybe.catMaybes (GHC.List.take (GHC.List.length (arg1)) (GHC.List.replicate (arg0) (Data.Maybe.Nothing))))
(Data.Function.id (snd (Pair (arg0) (arg1))))
(Data.Function.const (snd (Pair (arg1) (arg1))) (snd (Pair (arg1) (arg0))))
(Data.Either.rights (GHC.List.take (Data.Function.const (arg0) (arg1)) (Data.Maybe.maybeToList (Data.Maybe.Nothing))))
(Data.Either.lefts (GHC.List.take (Data.Function.const (arg0) (arg1)) (Data.Maybe.maybeToList (Data.Maybe.Nothing))))
(Data.Either.fromRight (snd (Pair (arg1) (arg1))) (Data.Maybe.fromMaybe (Data.Maybe.fromJust (Data.Maybe.Nothing)) (Data.Function.const (Data.Maybe.Nothing) (arg0))))
(Data.Either.fromLeft (snd (Pair (arg1) (arg1))) (Data.Maybe.fromMaybe (Data.Maybe.fromJust (Data.Maybe.Nothing)) (Data.Function.const (Data.Maybe.Nothing) (arg0))))
(Data.Bool.bool (snd (Pair (arg1) (arg1))) (snd (Pair (arg1) (arg1))) (snd (Pair (arg0) (Data.Bool.otherwise))))
(Cons (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (snd (Pair (arg0) (arg1))))
((GHC.List.++) (snd (Pair (arg1) (arg1))) (snd (Pair (arg0) (arg1))))
((GHC.List.!!) (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (snd (Pair (arg1) (arg0))))
head: "(snd (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))))"
Computation time: 1.390 sec
