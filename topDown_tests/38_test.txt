(snd (Pair (arg1) (Data.Function.const (Data.Maybe.Nothing) (arg0))))
(fst (Pair (Data.Maybe.fromMaybe (Data.Maybe.Nothing) (Data.Maybe.Nothing)) (Data.Function.const (arg1) (arg0))))
(GHC.List.sum (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (Data.Function.const (GHC.List.repeat (Data.Maybe.Nothing)) (Data.Function.const (arg1) (arg0))))
(GHC.List.product (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (Data.Function.const (GHC.List.repeat (Data.Maybe.Nothing)) (Data.Function.const (arg1) (arg0))))
(GHC.List.minimum (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (Data.Function.const (GHC.List.repeat (Data.Maybe.Nothing)) (Data.Function.const (arg1) (arg0))))
(GHC.List.maximum (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (Data.Function.const (GHC.List.repeat (Data.Maybe.Nothing)) (Data.Function.const (arg1) (arg0))))
(GHC.List.lookup (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (snd (Pair (arg1) (arg1))) (GHC.List.zip3 (Data.Maybe.maybeToList (Data.Maybe.Nothing)) (GHC.List.repeat (arg0)) (GHC.List.repeat (arg1))))
(GHC.List.last (Data.Function.const (GHC.List.repeat (Data.Maybe.Nothing)) (Data.Function.const (arg1) (arg0))))
(GHC.List.head (Data.Function.const (GHC.List.repeat (Data.Maybe.Nothing)) (Data.Function.const (arg1) (arg0))))
(Data.Tuple.snd (Pair (arg1) (Data.Function.const (Data.Maybe.Nothing) (arg0))))
(Data.Tuple.fst (Pair (Data.Maybe.fromMaybe (Data.Maybe.Nothing) (Data.Maybe.Nothing)) (Data.Function.const (arg1) (arg0))))
(Data.Maybe.listToMaybe (GHC.List.replicate (Data.Maybe.fromJust (Data.Maybe.Nothing)) (Data.Function.const (arg1) (arg0))))
(Data.Maybe.fromMaybe (snd (Pair (arg1) (Data.Maybe.Nothing))) (snd (Pair (arg0) (Data.Maybe.Nothing))))
(Data.Maybe.fromJust (GHC.List.lookup (Data.Maybe.fromJust (Data.Maybe.Nothing)) (Data.Function.const (arg1) (arg0)) (Data.Maybe.maybeToList (Data.Maybe.Nothing))))
(Data.Maybe.Just (snd (Pair (arg0) (arg1))))
(Data.Function.id (GHC.List.lookup (Data.Maybe.fromJust (Data.Maybe.Nothing)) (Data.Function.const (arg1) (arg0)) (Data.Maybe.maybeToList (Data.Maybe.Nothing))))
(Data.Function.const (snd (Pair (arg1) (Data.Maybe.Nothing))) (snd (Pair (arg1) (arg0))))
(Data.Either.fromRight (snd (Pair (arg1) (Data.Maybe.Nothing))) (Data.Maybe.fromMaybe (Data.Maybe.fromJust (Data.Maybe.Nothing)) (Data.Function.const (Data.Maybe.Nothing) (arg0))))
(Data.Either.fromLeft (snd (Pair (arg1) (Data.Maybe.Nothing))) (Data.Maybe.fromMaybe (Data.Maybe.fromJust (Data.Maybe.Nothing)) (Data.Function.const (Data.Maybe.Nothing) (arg0))))
(Data.Bool.bool (snd (Pair (arg1) (Data.Maybe.Nothing))) (snd (Pair (arg1) (Data.Maybe.Nothing))) (snd (Pair (arg1) (arg0))))
((GHC.List.!!) (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))) (Data.Function.const (Data.Maybe.fromJust (Data.Maybe.Nothing)) (Data.Function.const (arg1) (arg0))))
head: "(snd (snd (Data.Maybe.fromJust (Data.Maybe.Nothing))))"
Computation time: 1.362 sec
